// <auto-generated />
using System;
using FoodyAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodyAPI.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20210524130536_intialMigration")]
    partial class intialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("FoodyAPI.Models.DayIntake", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("PointerId")
                        .HasColumnType("int");

                    b.Property<string>("userID")
                        .HasColumnType("varchar(255)");

                    b.HasKey("DayId");

                    b.HasIndex("userID");

                    b.ToTable("DayIntake");
                });

            modelBuilder.Entity("FoodyAPI.Models.Product", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Calories")
                        .HasColumnType("double");

                    b.Property<double>("Carbs")
                        .HasColumnType("double");

                    b.Property<double>("Fat")
                        .HasColumnType("double");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Photoid")
                        .HasColumnType("longtext");

                    b.Property<string>("Productid")
                        .HasColumnType("longtext");

                    b.Property<double>("Protein")
                        .HasColumnType("double");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ProdId");

                    b.HasIndex("UserID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FoodyAPI.Models.User", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("callories")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FoodyAPI.Models.DayIntake", b =>
                {
                    b.HasOne("FoodyAPI.Models.User", "user")
                        .WithMany("Statistics")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("user");
                });

            modelBuilder.Entity("FoodyAPI.Models.Product", b =>
                {
                    b.HasOne("FoodyAPI.Models.User", "User")
                        .WithMany("Favourite")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodyAPI.Models.User", b =>
                {
                    b.Navigation("Favourite");

                    b.Navigation("Statistics");
                });
#pragma warning restore 612, 618
        }
    }
}
